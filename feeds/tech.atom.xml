<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>the Good the Bad and the Curious</title><link href="http://guizishanren.com/" rel="alternate"></link><link href="http://feeds.feedburner.com/feeds/tech.atom.xml" rel="self"></link><id>http://guizishanren.com/</id><updated>2016-01-01T08:00:00-08:00</updated><entry><title>How To Share Files and Photos Without Any Cloud Service</title><link href="http://guizishanren.com/share-files-and-photos-without-cloud" rel="alternate"></link><updated>2016-01-01T08:00:00-08:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2016-01-01:share-files-and-photos-without-cloud</id><summary type="html">&lt;p&gt;使用情景：用户A把自己电脑上的文件夹分享给用户B&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户A下载&lt;a href="https://www.getsync.com"&gt;BitTorrent Sync&lt;/a&gt;. BitTorrent Sync支持多个平台，Mac, Windows, iOs, Android，Windows Mobile和Kindle。作为简单的分享照片，使用它的免费版即可。&lt;/li&gt;
&lt;li&gt;用户A安装好BitTorrent Sync后，打开软件，按左上角&lt;code&gt;Add Folder&lt;/code&gt;, 指定你想要分享的文件夹。添加后Status下显示&lt;code&gt;No peers&lt;/code&gt;.
&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/gankyun/23812898220/in/dateposted/" title="sync 01"&gt;&lt;img src="https://farm2.staticflickr.com/1594/23812898220_bf3bc4b0f6_c.jpg" width="800" height="300" alt="sync 01"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用户A选择这个文件夹，点击右方（Date Synced下）的分享按钮，出来一个Share的菜单。
&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/gankyun/24082471686/in/dateposted/" title="sync 02"&gt;&lt;img src="https://farm2.staticflickr.com/1503/24082471686_caf81459d3_z.jpg" width="631" height="529" alt="sync 02"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用户A在Permission下指定这个文件夹对其他用户的分享权限，选择&lt;code&gt;Read Only&lt;/code&gt;，其他的都选择默认即可。&lt;/li&gt;
&lt;li&gt;用户A选择把分享链接分享给其他朋友的方式，建议用&lt;code&gt;Copy&lt;/code&gt;，最简单直接。点击了Copy后，这个文件夹的分享链接就被粘贴到clipboard上了。把这个链接发给朋友。&lt;/li&gt;
&lt;li&gt;用户B - 收到链接的朋友，也需要在自己的电脑上安装BitTorrent Sync&lt;/li&gt;
&lt;li&gt;用户B把链接copy下来，打开BitTorrent Sync，点击右上角的设置（多摸狗血的UI），选择&lt;code&gt;Manual Connection&lt;/code&gt;，在接下来的窗口里粘贴链接，然后在本地电脑上选择文件夹的地址。
&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/gankyun/23480319214/in/dateposted/" title="sync 03"&gt;&lt;img src="https://farm6.staticflickr.com/5704/23480319214_d5e1604a7e_z.jpg" width="640" height="220" alt="sync 03"&gt;&lt;/a&gt;
&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/gankyun/23740751919/in/dateposted/" title="sync 04"&gt;&lt;img src="https://farm6.staticflickr.com/5824/23740751919_4aa5da3895_z.jpg" width="640" height="377" alt="sync 04"&gt;&lt;/a&gt;
&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/gankyun/23812898640/in/dateposted/" title="sync 05"&gt;&lt;img src="https://farm2.staticflickr.com/1720/23812898640_8fb0af2d4c_z.jpg" width="640" height="411" alt="sync 05"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这个时候用户A会在自己的BitTorrent Sync里收到一个提示，说用户B在申请文件夹的共享权限，批准即可。
&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/gankyun/23481767723/in/dateposted/" title="sync 06"&gt;&lt;img src="https://farm6.staticflickr.com/5636/23481767723_8fb0af2d4c_z.jpg" width="640" height="167" alt="sync 06"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Voila! 现在这个文件夹的文件正在被BitTorrent Sync用p2p的方式（不通过任何云服务的上载）被快乐地从A的电脑下载到B的电脑中。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="中文"></category></entry><entry><title>Change Syntax Highlights with Pygments CSS for Pelican Site</title><link href="http://guizishanren.com/change-syntax-highlight-with-pygments-CSS-for-Pelican-blog" rel="alternate"></link><updated>2015-12-30T08:00:00-08:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2015-12-30:change-syntax-highlight-with-pygments-CSS-for-Pelican-blog</id><summary type="html">&lt;p&gt;It's important to get the syntax highlight colors right. Here's my workflow to update that when I feel like a change.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find out which themes are already available from &lt;a href="http://pygments.org/docs/styles/"&gt;pygments&lt;/a&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;pygments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;styles&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;STYLE_MAP&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;STYLE_MAP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;monokai&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;manni&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;rrt&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;perldoc&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;borland&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;colorful&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;murphy&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;vs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;trac&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;tango&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;fruity&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;autumn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;bw&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;emacs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;pastie&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;friendly&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check out the demo for various styles&lt;/p&gt;
&lt;p&gt;&lt;a href="http://help.farbox.com/pygments.html"&gt;This site has a good gallery&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generate a new pygments_XXX.css in &lt;code&gt;static/&lt;/code&gt; folder based on &lt;a href="http://docs.getpelican.com/en/3.6.3/faq.html"&gt;Pelican's instruction&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;pygmentize&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pygments_vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the current pygments.css with the new one&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;pygments_monokai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt; &lt;span class="n"&gt;pygments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it. Now just deploy and push.&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>Writing Blog Articles with Pelican in Markdown</title><link href="http://guizishanren.com/writing-blog-articles-with-pelican-in-markdown" rel="alternate"></link><updated>2015-12-27T08:00:00-08:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2015-12-27:writing-blog-articles-with-pelican-in-markdown</id><summary type="html">&lt;p&gt;After &lt;a href="http://guizishanren.com/guide-to-set-up-github-page-and-pelican"&gt;installing Pelican to generate your static single page blog site&lt;/a&gt;, I follow the below steps to write my blog articles.&lt;/p&gt;
&lt;h1&gt;1. Learn Markdown language and pick an editor&lt;/h1&gt;
&lt;p&gt;As of 2015, I almost write exclusively with Markdown language. For work on &lt;a href="http://linkqlo.com"&gt;Linkqlo&lt;/a&gt;, I write on issue trackers and wiki pages on our internal &lt;a href="https://gitlab.com/"&gt;Gitlab-based&lt;/a&gt; server. For my day-to-day journal, I write on &lt;a href="http://dayoneapp.com/"&gt;DayOne App&lt;/a&gt;. For personal blog &lt;a href="http://guizishanren.com"&gt;the Good, the Bad, and the Curious&lt;/a&gt;, it's in Markdown as well as it's hosted on &lt;a href="https://pages.github.com/"&gt;Github Page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If something cannot be written in Markdown, I probably will not write it. This is one of the several reasons I stopped using Evernote a long time ago. &lt;/p&gt;
&lt;p&gt;Gitlab, Github, DayOne, and many other Markdown platforms all have their own flavored Markdown syntax. It could be confusing sometimes but &lt;a href="https://daringfireball.net/projects/markdown/"&gt;the basic syntax&lt;/a&gt; is always the same.&lt;/p&gt;
&lt;p&gt;Picking a good editor is a monumental and very personal decision for someone who truly respects his/her own writing. I've been using &lt;a href="http://25.io/mou/"&gt;MOU version 0.8.7&lt;/a&gt; in the past few years. It's a fast editor with all the functions I need, like the trivial fun of switching color themes and a side-by-side live view window.&lt;/p&gt;
&lt;h1&gt;2. Header format for blog articles&lt;/h1&gt;
&lt;p&gt;Every Pelican-based post should start with the below header format so that it can be recognized by Pelican and generated properly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;epic&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Stanford&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;startup&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Tech&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;epic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;short&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feeds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;, &lt;strong&gt;Date&lt;/strong&gt; and &lt;strong&gt;Slug&lt;/strong&gt; are must-haves. The rest are optional, which can be left blank if not needed. &lt;/p&gt;
&lt;p&gt;A post can have multiple tags but only one category. Think carefully how you want to organize your contents. Category is kind of more permanent and should be considered as an integral part of the article, as it's supported almost universally. Tags are nice-to-haves and may not be supported fully everywhere. Slug forms the URL of the post, so it's important to have a proper one for SEO (search engine optimization) purpose. Summary is the short snippet that is displayed beneath the link when the post pops up on Google search result. By Pelican default setting it will be the first paragraph (up to certain character length) of the post, if it's left blank.  It is always better to include at least some summary so that it's more search engine friendly.&lt;/p&gt;
&lt;h1&gt;3. Commands for publishing a post&lt;/h1&gt;
&lt;p&gt;On command-line, enter into the path where the pelican folder is located&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run a local simulation before pushing up the changes to Github Page&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;devserver&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can view the rendered pages on your local machine at http://localhost:8000/&lt;/p&gt;
&lt;p&gt;Kill the simulation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;develop_server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Generate the post&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...and you'll see the below message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Done&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Processed&lt;/span&gt; &lt;span class="mi"&gt;114&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;3.55&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Commit the change to the local repository&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;ghp-import&lt;/code&gt; is equivalent to &lt;code&gt;git commit&lt;/code&gt;. Write something meaningful in the commit message, like "another epic post today when everyone is slacking off".&lt;/p&gt;
&lt;p&gt;Push up the commit to Github Page&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... and you'll see the below message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Counting&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Delta&lt;/span&gt; &lt;span class="n"&gt;compression&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Compressing&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Writing&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mf"&gt;285.43&lt;/span&gt; &lt;span class="n"&gt;KiB&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delta&lt;/span&gt; &lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reused&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delta&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/zire/blog.git&lt;/span&gt;
   &lt;span class="n"&gt;c6c4e43&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;.0e1&lt;/span&gt;&lt;span class="n"&gt;d7b3&lt;/span&gt;  &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voila! There you go!&lt;/p&gt;</summary><category term="pelican"></category><category term="markdown"></category></entry><entry><title>How to Manage Your Photos - Part 2</title><link href="http://guizishanren.com/how-to-manage-photos-part-2" rel="alternate"></link><updated>2015-06-28T08:00:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2015-06-28:how-to-manage-photos-part-2</id><summary type="html">&lt;p&gt;Here are the settings I use for the official Flickr plug-in in Lightroom 4.1. Extraordinary care needs to be taken at this step. If not set up correctly, all the existing Flickr photos might need to be re-published and that might take a long long time.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/gankyun/19251351056" title="lightroom 01 by herbertyang, on Flickr"&gt;&lt;img src="https://c1.staticflickr.com/1/354/19251351056_6da4fa5bc8_c.jpg" width="800" height="798" alt="lightroom 01"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flickr Title&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set Flickr Title Using: &lt;em&gt;IPTC Title&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;If Empty, Use; &lt;em&gt;Filename&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;When Updating Photos: &lt;em&gt;Leave Existing Titles&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;note: Title should be set differently from filename. Filename is used to index photos in an album and give a unique identifier/handle to a photo. Title is used to give a more descriptive caption to a photo. Filename needs to be unique, while title can be anything. Caption is another item that often confuses and complicates this love triangle of filename-title-caption. I'll just leave caption blank.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Filename&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uncheck everything&lt;/li&gt;
&lt;li&gt;note: Renaming can be done in this Lightroom-to-Flickr as well, but I'd suggest doing file renaming within Lightroom, where you can have almost 100% control of what happens.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Video&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uncheck everything&lt;/li&gt;
&lt;li&gt;note: I keep videos separate from photos. All my videos get uploaded to youtube.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;File Settings&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set Quality to: &lt;em&gt;100&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;note: The default is 60%. So make sure you change it to 100% to preserve the raw quality.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Image Sizing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uncheck everything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/gankyun/19089834598" title="lightroom 02 by herbertyang, on Flickr"&gt;&lt;img src="https://c1.staticflickr.com/1/490/19089834598_4a9ea2e3a1_c.jpg" width="800" height="795" alt="lightroom 02"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Output Sharpening&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uncheck everything  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Metadata&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose: &lt;em&gt;All&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;uncheck everything else&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Watermarking&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uncheck all  &lt;/li&gt;
&lt;li&gt;note: If you're a professional stock photographer, you might need to adjust this setting to stamp a watermark on your photos. It's not necessary for photos about families and friends.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Privacy and Safety&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Privacy: &lt;em&gt;Private&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Safety: &lt;em&gt;Safe&lt;/em&gt;, check "Hide from public site areas"&lt;/li&gt;
&lt;li&gt;Type: &lt;em&gt;Photo&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;note: It's critical to get this one right. You don't want to upload photos as public albums by default.  &lt;/li&gt;
&lt;/ul&gt;</summary><category term=""></category></entry><entry><title>How to Tell if You are a Tech Noob</title><link href="http://guizishanren.com/how-to-tell-a-tech-noob" rel="alternate"></link><updated>2015-02-24T08:00:00-08:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2015-02-24:how-to-tell-a-tech-noob</id><summary type="html">&lt;p&gt;The six habits of a highly likely technology noob:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Your have more than &lt;em&gt;ONE&lt;/em&gt; personal email addresses and your friends are always confused which one to use and spend countless hours verifying and re-verifying if you have received that missing email.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You use work email address for personal emails.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You still use XXX@yahoo.com for email (except if you're from Taiwan or Japan originally).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have more than &lt;em&gt;TWO&lt;/em&gt; mobile numbers in one country and your friends are always confused which one to call you at and they often end up not calling you at all out of frustration and confusion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have more than &lt;em&gt;ONE&lt;/em&gt; WeChat account. You forgot how to delete the first one and you keep your two WeChat accounts in the same chat group and confuse the hell out of everyone else.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You still don't have your personalized URL on Linkedin, so your Linkedin URL reads like an unrecognizable random character string.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How many have you been hit on?&lt;/p&gt;</summary><category term=""></category></entry><entry><title>A Dummy's Guide to Set Up Static Blog Site with Github Page and Pelican</title><link href="http://guizishanren.com/guide-to-set-up-static-blog-site-on-github-page-and-pelican" rel="alternate"></link><updated>2014-07-02T08:00:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2014-07-02:guide-to-set-up-static-blog-site-on-github-page-and-pelican</id><summary type="html">&lt;p&gt;In early March I migrated &lt;a href="http://guizishanren.com"&gt;the Good, the Bad, and the Curious&lt;/a&gt; from the draconian Wordpress architecture to a much more elegant static site structure hosted on &lt;a href="https://pages.github.com/"&gt;Github Page&lt;/a&gt; using a &lt;a href="http://en.wikipedia.org/wiki/Web_template_system#Static_page_generators"&gt;static site generator&lt;/a&gt; &lt;a href="http://docs.getpelican.com/en/3.4.0/"&gt;Pelican&lt;/a&gt;. The original conversion was quite an involving effort of a series of trial-and-error because of the respective idiosyncrasies from Github Page itself, a fast-evolving Pelican, and legacy issues from Wordpress. &lt;/p&gt;
&lt;p&gt;The second time is a charm. I managed to set up the second site within only a few hours last night. Because OC is a brand new site from scratch, I didn't have to deal with Wordpress anymore. This guide is for my own reference (in case I forget), as well as for anyone who might try to do the same - to create a new static contents site on Github Page with Python-friendly Pelican (you can also use &lt;a href="https://github.com/jekyll/jekyll"&gt;Jekyll&lt;/a&gt; if you're more familiar with Ruby). &lt;/p&gt;
&lt;p&gt;This dummy's guide assumes the reader knows nothing and has nothing, with only a MacBook Air/Pro. Naturally it will not be useful for most people. If you are a programmer this is a walk in the park for you and you know how to do most of the steps from high-school. If you are not a programmer you probably won't be crazy enough to even give it a try - it's just too daunting a task for someone with no CS training.&lt;/p&gt;
&lt;h1&gt;1. Install iTerm&lt;/h1&gt;
&lt;p&gt;Download and install &lt;a href="http://www.iterm2.com/#/section/home"&gt;iTerm2&lt;/a&gt; to replace the default command-line tool Terminal from OSX. It's much more powerful and versatile than Terminal.&lt;/p&gt;
&lt;p&gt;In iTerm2's preferences, go to Terminal=&amp;gt;Terminal Emulation, make sure Character Encoding is &lt;em&gt;Unicode (UTF-8)&lt;/em&gt; and Report Terminal Type is &lt;em&gt;xterm-256color&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;iTerm will provide the command-line interface to execute all the shell commands that you will need to use for github and pelican. &lt;/p&gt;
&lt;p&gt;Let's make a few adjustments on your shell environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
&lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;span class="cp"&gt;# press &amp;quot;i&amp;quot; to enter into edit mode&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ls -G&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;# turn on color display in shell&lt;/span&gt;
&lt;span class="n"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;\$\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="cp"&gt;# change the format of your cursor prompt&lt;/span&gt;
&lt;span class="cp"&gt;# press Esc key to switch into command mode&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;wq&lt;/span&gt;
&lt;span class="cp"&gt;# save the change and exit the file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;2. Install Python and git&lt;/h1&gt;
&lt;p&gt;There are two primary static site generators for Github Page. If you're familiar with Ruby, Jekyll is recommended by Github team; if you're more familiar with Python, Pelican is the most popular choice. &lt;/p&gt;
&lt;p&gt;Pelican is written in Python so you need to install Python first. Download the latest version of Python &lt;a href="https://www.python.org/download/"&gt;here&lt;/a&gt; first. &lt;/p&gt;
&lt;p&gt;You can also manage your Github Page site without relying on any SSG (static site generator), but using a SSG will be much more productive. &lt;/p&gt;
&lt;p&gt;Before starting with Github, you need to install Git, the most widely used version control system. Download and install from &lt;a href="http://git-scm.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;3. Sign up with Github&lt;/h1&gt;
&lt;p&gt;Sign up an account with &lt;a href="https://github.com/"&gt;Github&lt;/a&gt;. It's free (thanks to &lt;a href="http://a16z.com"&gt;Andreessen Horowitz&lt;/a&gt;'s $100 million investment]). In recent years, Github has become the Linkedin for geeks/programmers/developers, and the world's largest hosting platform for computer codes.&lt;/p&gt;
&lt;p&gt;In your Github page, go to Account Settings (top right corner), from the left-hand menu, go to SSH Keys. You need to link up your SSH key from the local machine to your github page so that you can push contents from local to github. Follow &lt;a href="https://help.github.com/articles/generating-ssh-keys"&gt;this guide&lt;/a&gt; to set it up:&lt;/p&gt;
&lt;p&gt;Open iTerm, you should be at the root of your home directory. Type the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="cp"&gt;# enter into a hidden directory that stores ssh information&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;al&lt;/span&gt;
&lt;span class="cp"&gt;# list the files in your .ssh directory&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keygen&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;# create a new ssh key, using your email as a label&lt;/span&gt;
&lt;span class="n"&gt;eval&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="cp"&gt;# start the ssh-agent in the background&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;
&lt;span class="cp"&gt;# add the ssh info into a file id_rsa in directory .ssh&lt;/span&gt;
&lt;span class="n"&gt;pbcopy&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;
&lt;span class="cp"&gt;# copy the contents of the id_rsa.pub file to your computer&amp;#39;s clipboard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Following the rest of the steps as laid out in &lt;a href="https://help.github.com/articles/generating-ssh-keys"&gt;github's help&lt;/a&gt; to complete the "hand-shake" setup.&lt;/p&gt;
&lt;h1&gt;4. Create a Github repo&lt;/h1&gt;
&lt;p&gt;Next step (create the repository) is easy for pros but often confusing for dummies. The critical question is: where this folder of your website should be? This folder can be anywhere in your home directory on your local machine. I usually just create a folder right in the root of my home directory. Open your iTerm, then:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
&lt;span class="cp"&gt;# enter into my home directory&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="cp"&gt;# create an empty directory called &amp;quot;myblog&amp;quot; &lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="cp"&gt;# enter into this blog folder. All subsequent commands will be carried out in this path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When the local folder is set up, go to your &lt;a href="https://github.com/new"&gt;github account&lt;/a&gt; to create a new repository (sort of the mirrored folder of your local one). Only check the box for "public". The name of this repo can be anything for your own benefit and doesn't need to be related to your website. I just named it "blog". &lt;/p&gt;
&lt;p&gt;Once the repo is set up, you will see a set of commands on screen and you're ready for your first commit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="cp"&gt;# make sure you are in the right path by entering into your blog folder&lt;/span&gt;
&lt;span class="n"&gt;touch&lt;/span&gt; &lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;span class="cp"&gt;# create an empty file for the first git commit&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;span class="cp"&gt;# add this file to the pipeline of your next git push&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;first commit&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;# exciting moment huh?&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/yourname/blog.git&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you've got a repo on your Github account. We need to turn this repo into a Github Page.&lt;/p&gt;
&lt;h1&gt;5. Create a Github Page project site&lt;/h1&gt;
&lt;p&gt;Go to &lt;a href="https://pages.github.com/"&gt;Github Page&lt;/a&gt; to create your project site. &lt;/p&gt;
&lt;p&gt;When choosing between User/Organization Site and Project Site, I picked &lt;em&gt;Project Site&lt;/em&gt; to give myself more flexibility in the future. On your Github account, you can have multiple Project Sites, but only one User/Organization Site. &lt;/p&gt;
&lt;p&gt;Next, choose &lt;em&gt;Start from scratch&lt;/em&gt; for your new project site. &lt;/p&gt;
&lt;p&gt;Next, create a gh-pages branch. No need to dwell into the fine differences between "master" and "gh-pages branch" here. Just follow the below instructions if you want to get up running quickly. This step is only possible AFTER you have committed the first git push into your newly created Github repo. &lt;/p&gt;
&lt;p&gt;Follow the on-screen guide to create a &lt;em&gt;gh-pages&lt;/em&gt; branch for your repo "blog" and make gh-pages the default branch for this repo. &lt;/p&gt;
&lt;p&gt;Create your version of Hello World file as the on-screen guide suggests. &lt;/p&gt;
&lt;p&gt;Voila, your Github Page project site is now up and running at &lt;a href="http://yourname.github.io/blog"&gt;http://yourname.github.io/blog&lt;/a&gt;. It'll take up to 10 minutes for the website to come alive at the first time. In the future, the changes are almost instantaneous. &lt;/p&gt;
&lt;h1&gt;6. Get a domain name&lt;/h1&gt;
&lt;p&gt;Go buy a domain name for your website. I use &lt;a href="http://www.godaddy.com/"&gt;GoDaddy&lt;/a&gt;. Buying and managing domain name is very much of a commodity business and there are many competing companies. Just pick one that is reputable and large enough, like godaddy.&lt;/p&gt;
&lt;p&gt;No need to pay for any other "enhancements" other than the domain name itself. Start with a one or two-year subscription. You probably don't want to spend more than $30 for this step.&lt;/p&gt;
&lt;h1&gt;7. Redirect domain name/URL to Github Page&lt;/h1&gt;
&lt;p&gt;Another critical step: you want to host your website on github page using your preferred domain name, so that when people click "http://yourdomain.com", they will see the contents that are actually loaded/stored at "http://yourname.github.io/blog" (notice the io extension, not com). Basically, you need to redirect your newly bought domain name's URL to your github page. &lt;/p&gt;
&lt;p&gt;Follow this &lt;a href="https://help.github.com/articles/adding-a-cname-file-to-your-repository"&gt;detailed instruction&lt;/a&gt;. Go to your Github Account's blog repo, create a CNAME file with only one line "&lt;em&gt;yourdomain.com&lt;/em&gt;". &lt;/p&gt;
&lt;p&gt;If you have done this right, you should see "Your site is published at &lt;a href="http://yourdomain.com"&gt;http://yourdomain.com&lt;/a&gt;" in the settings section of your blog repo in about 10 minutes.&lt;/p&gt;
&lt;p&gt;Now the really confusing step - configure your DNS settings. &lt;/p&gt;
&lt;p&gt;Go to your godaddy account, launch the menu for domains, go to "DNS zone files" section. You will see several sections such as "A(Host)", "AAAA(IPv6 Host)", "CName(Alias)", "TXT(Text)", "SRV(Service)", "NS(Nameserver)". &lt;/p&gt;
&lt;p&gt;Different domain sites have different interfaces, but usually you will see something like this under "&lt;em&gt;A(Host)&lt;/em&gt;":&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Host&lt;/th&gt;
&lt;th&gt;Points to&lt;/th&gt;
&lt;th&gt;TTL&lt;/th&gt;
&lt;th&gt;Actions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;xx.xx.xx.xx&lt;/td&gt;
&lt;td&gt;1 hour&lt;/td&gt;
&lt;td&gt;edit/delete&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Click on the Edit, change the default IP value "xx.xx.xx.xx" in "Points to" (or IP address) to "&lt;em&gt;199.27.79.133&lt;/em&gt;", Save so that the change will take effect.&lt;/p&gt;
&lt;p&gt;This IP address 199.27.79.133 is the one used by Github Page's server. There are other IP addresses that can also be used. This one works for me.&lt;/p&gt;
&lt;p&gt;It'll take another a few minutes for the domain registrar to update that information in the database. If done right, you should see the contents of your Hello World file from Step 6 if you click on "http://yourdomain.com". The handshake between your domain and your Github Page is complete.&lt;/p&gt;
&lt;p&gt;Whew! ... we have barely scratched the surface so far ...&lt;/p&gt;
&lt;h1&gt;8. Install Pelican and dependencies&lt;/h1&gt;
&lt;p&gt;Download pip from &lt;a href="http://pip.readthedocs.org/en/latest/installing.html#install-pip"&gt;here&lt;/a&gt; into your blog home directory on local machine.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="cp"&gt;# enter into your local blog home directory&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="cp"&gt;# run the installation with administrator access. Enter your admin password when prompted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install &lt;a href="http://docs.getpelican.com/en/3.4.0/install.html"&gt;Pelican&lt;/a&gt; using pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
&lt;span class="cp"&gt;# do this at your home directory&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="cp"&gt;# install pelican with admin access&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install Markdown using pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;
&lt;span class="cp"&gt;# so that your system recognizes .md and .markdown files as Markdown files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install &lt;a href="https://github.com/davisp/ghp-import"&gt;ghp-import&lt;/a&gt; using pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt;
&lt;span class="cp"&gt;# this add-on is to facilitate the git push for your Github Page Project Site as it&amp;#39;s a gh-pages branch, not the master branch as default&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;9. Kickstart your site with Pelican&lt;/h1&gt;
&lt;p&gt;Finally, we can create a skeleton project now on the local machine with Pelican&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="cp"&gt;# make sure you are in the right path for your blog&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;span class="cp"&gt;# launch the installer for your project/blog site&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You'll next be prompted with 10+ lines of questions. It's quite a challenge for the first time to figure out how to answer them (that's why you might need this guide).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Where&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[.]&lt;/span&gt;
&lt;span class="cp"&gt;# just press Enter to use the default current path &amp;quot;~/myblog&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="cp"&gt;# enter &amp;quot;My Awesome Site&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Who&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="cp"&gt;# enter &amp;quot;Chuck Norris&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;# press Enter to accept English&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;specify&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//example.com   (Y/n)&lt;/span&gt;
&lt;span class="cp"&gt;# enter Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter http:&lt;/span&gt;&lt;span class="c1"&gt;//yourdomain.com&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt; &lt;span class="n"&gt;pagination&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;many&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;# enter 10&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Fabfile&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;automate&lt;/span&gt; &lt;span class="n"&gt;generation&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;publishing&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;simpleHTTP&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;assist&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;development&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;upload&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;FTP&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;upload&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;SSH&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;upload&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;upload&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;upload&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Rackspace&lt;/span&gt; &lt;span class="n"&gt;Cloud&lt;/span&gt; &lt;span class="n"&gt;Files&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;# enter N&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's the screenshot: &lt;a href="https://www.flickr.com/photos/gankyun/14556244811" title="pelican kickstart by herbertyang, on Flickr"&gt;&lt;img src="https://farm4.staticflickr.com/3836/14556244811_26106e81ca_z.jpg" width="800" alt="pelican kickstart"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a more detailed explanation, read this up: &lt;a href="http://docs.getpelican.com/en/3.4.0/install.html"&gt;kickstart your pelican site&lt;/a&gt;. I believe all these choices can still be changed later in the settings file. So don't worry about making any bad choice now. &lt;/p&gt;
&lt;h1&gt;10. Install an editor&lt;/h1&gt;
&lt;p&gt;Now you will need to do some Python/CSS hacking/editing. There are a million choices out there and everyone is highly opinionated and philosophical about the choice of his/her editor. If you are a Mac user, consider the free &lt;a href="http://textwrangler.onfreedownload.com/?lp=adwords&amp;amp;tg=us&amp;amp;kw=Textwrangler%20free&amp;amp;mt=b&amp;amp;ad=33478422173&amp;amp;pl=&amp;amp;ds=s&amp;amp;os=mac&amp;amp;gclid=CjgKEAjw286dBRDmwbLi8KP71GQSJAAOk4sjuhKuIGJATMLadai0PoHsBjW-vjCKcf2r9sqsnBSzD_D_BwE"&gt;TextWrangler&lt;/a&gt; or the more advanced &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text 2&lt;/a&gt;. I use Sublime Text 2 (its paid version is well worth the money). If you are a windows user, you should buy a Mac.&lt;/p&gt;
&lt;p&gt;Picking a color theme for the editor can be one of the most monumental decisions in this process. Again there are more choices (all free) than you can choose from. I'll spare you from listening to my own story on this part.&lt;/p&gt;
&lt;h1&gt;11. Adjust Pelican settings&lt;/h1&gt;
&lt;p&gt;I spent a lot of time tinkering with the ~/myblog/&lt;em&gt;pelicanconf.py&lt;/em&gt; file. This file defines all the parameters and structure of your website and demands a lot of close attention to each detail. &lt;/p&gt;
&lt;p&gt;You might want to start with a &lt;a href="http://docs.getpelican.com/en/3.4.0/settings.html#example-settings"&gt;default example&lt;/a&gt; and then customize that into your own version. A detailed walk-through of all the parameters in this configuration file is beyond the scope of this guide.&lt;/p&gt;
&lt;p&gt;It's a Python file (with .py extension). You can use your editor (TextWrangler, Sublime Text, or any other) to open and edit this file. The color theme makes a big difference when you have to spend hours and hours reading each line.&lt;/p&gt;
&lt;p&gt;You also need to do an important step (and no one mentions this anywhere) here: &lt;em&gt;move your CNAME file&lt;/em&gt; from the root directory as ~/myblog/CNAME to ~/myblog/output/CNAME. After restructuring your website using Pelican, you have changed the default directory (that is supposed to be mirrored on your Github Page project site) from ~/myblog to ~/myblog/output. The CNAME file has to reside in the root directory of your Github Page project site for the URL redirect to take effect. That's why this move is a must.&lt;/p&gt;
&lt;h1&gt;12. Pick a Pelican theme and customize CSS&lt;/h1&gt;
&lt;p&gt;Welcome to the real time-sucker, Pelican theme. It's a time-sucker because this is one of the main reasons we want to move away from cumbersome Wordpress to migrate to Github Page, so we want to make sure this is done right and perfect. With git-based Github Page and Pelican, we have total control of our contents and HOW these contents will be presented, instead of wasting time trying to navigate through millions of Wordpress plug-ins, that distract us from the pure joy of writing. &lt;/p&gt;
&lt;p&gt;Download all the main Pelican themes from &lt;a href="https://github.com/getpelican/pelican-themes"&gt;this github repo&lt;/a&gt;. Download the zip file and unzip that into your ~/myblog directory. Change the name of the folder to "themes" to make easier reference.&lt;/p&gt;
&lt;p&gt;You can change the theme pretty easily in pelicanconf.py. Open the configuration file in Sublime Text and enter this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;themes/bootstrap2&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;# save the file and this new theme will take effect immediately&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Say you have picked the famous Twitter Bootstrap2 theme, then this file (~/myblog/themes/bootstrap2/static/css/&lt;em&gt;bootstrap.min.css&lt;/em&gt;) will be your dear friend in the next two weeks as you ceaselessly try out various styling combinations. It can be quite exhausting. Most Pelican themes follow a similar file structure and there will be this one bad-bass monster CSS file in one of the folders. Everything about the presentation/look of your website will be spelled and defined here. Indulge yourself in the world of CSS. &lt;/p&gt;
&lt;h1&gt;13. Organize contents&lt;/h1&gt;
&lt;p&gt;A very, very philosophical question that will have profound impact on your website's SEO (Search Engine Optimization). Again you just have to try it to figure out the best path for yourself that suits your preferences. There are a few factors that are more important than others, because it'll take some laborious effort to undo/change these settings later on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;category or tags?&lt;/li&gt;
&lt;li&gt;URL format/convention for your web site articles/pages&lt;/li&gt;
&lt;li&gt;local folder structure within ~/myblog/content&lt;/li&gt;
&lt;li&gt;naming convention for your markdown files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Think carefully at this step&lt;/em&gt;. Take a look at what others are doing. Everything else can be changed rather easily on the fly, except for the above few decisions. You can't avoid these questions anyway if you are a serious writer and want to invest time creating your own contents efficiently.&lt;/p&gt;
&lt;h1&gt;14. Learn Markdown and download MOU&lt;/h1&gt;
&lt;p&gt;You still need to learn Markdown language because all contents in this Github-Page/Pelican approach are created using Markdown. Markdown is a huge topic and represents one type of philosophy on its own. In short, if you're a serious writer, you should use Markdown to create your contents because it keeps you focused on writing itself and from worrying about format/presentation (which will be taken care of with the CSS file mentioned above).&lt;/p&gt;
&lt;p&gt;Get started with Markdown from the famous &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Daring Fireball&lt;/a&gt;. The syntax is very easy to pick up within half an hour. &lt;/p&gt;
&lt;p&gt;Many familiar formats in HTML school are missing from Markdown, because they're meant to be. Don't complain. Just get used to it.&lt;/p&gt;
&lt;p&gt;How to create a table in Markdown (not part of the core syntax from DF's original plan):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;heading&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|----|----|----|----|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;world&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;rock&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create a table in the HTML output. Make sure there are &lt;em&gt;4&lt;/em&gt; "-" in the second line otherwise the table won't work.&lt;/p&gt;
&lt;p&gt;All markdown files will have an extension .markdown or .md. You can use any editor to edit them but &lt;a href="http://mouapp.com/"&gt;MOU&lt;/a&gt; is the most popular choice on OSX. MOU provides a split screen side-by-side with your contents so that you can see in real-time how your HTML page will look like. It also works very well with Chinese characters. If you don't want to be bothered with another software, Sublime Text is just fine.&lt;/p&gt;
&lt;h1&gt;15. Create contents and publish&lt;/h1&gt;
&lt;p&gt;At last, let there be an article. We've got all the ingredients ready.&lt;/p&gt;
&lt;p&gt;Create a .md file in MOU. This markdown file should contain the following header information so that Pelican knows how to render the page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;sensational&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;中文&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Tech&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;executive&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save this file into &lt;em&gt;~/myblog/content/&lt;/em&gt; folder. I store these header info in an Evernote post that I can copy and paste from pretty easily. &lt;/p&gt;
&lt;p&gt;Run the test server on your local machine to see if things come out alright. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="cp"&gt;# the next two commands need to be excited at the root directory of the site&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="cp"&gt;# sort of &amp;quot;compiling&amp;quot; your website and render markdown files into HTML ones&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;devserver&lt;/span&gt;
&lt;span class="cp"&gt;# use Python to launch a server at your local machine&amp;#39;s port 8000&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;develop_server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;
&lt;span class="cp"&gt;# stop the Python server, kill this process&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Open your browser, go to &lt;em&gt;&lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/em&gt;. Hopefully you'll see a cool-looking website as you desire. If not, go back to &lt;em&gt;pelicanconf.py&lt;/em&gt; and the &lt;em&gt;CSS file&lt;/em&gt; to see what's gone wrong. These two are the single most important files of this entire process. &lt;/p&gt;
&lt;p&gt;When you're happy with the test page, let's go live.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;myblog&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;message&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="cp"&gt;# you can write whatever comment in &amp;quot;message&amp;quot; field that might help you distinguish this session from others&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Look at your &lt;a href="http://yourdomain.com"&gt;http://yourdomain.com&lt;/a&gt;. You should see exactly the same page from the Python test server, except it's now available on a public website. The process takes effect within seconds (it might take longer if you have many articles with many tags).&lt;/p&gt;
&lt;p&gt;General comments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try not to store too many images locally/on Github Page repo. Use flickr (1TB for free) as the central depository for all your image files and link your &lt;a href="http://flickr.com"&gt;flickr&lt;/a&gt; image in markdown files.&lt;/li&gt;
&lt;li&gt;Back up your pelicanconf.py and CSS file constantly. You don't want to recreate them from scratch.&lt;/li&gt;
&lt;li&gt;Github may or may not be blocked in China, depending on Beijing's weather day-to-day (literally). The same goes for any respectable social media website or any website (like Flickr) of any value outside of China, sadly. At the moment my website is not blocked in China yet. Long live Github!&lt;/li&gt;
&lt;li&gt;Some Pelican themes are more mobile-responsive and some are not. So picking the right theme is important. Of course, if you're a CSS pro, you can create your own Pelican theme left and right (then you won't be reading this article). &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy your new website powered by Pelican and hosted by Github Page! It's a strenuous effort but a worthwhile one.&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>微信群的改进</title><link href="http://guizishanren.com/how-wechat-group-can-be-better" rel="alternate"></link><updated>2014-05-25T08:00:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2014-05-25:how-wechat-group-can-be-better</id><summary type="html">&lt;p&gt;现在全球华人都在微信上，每个人每天都被自己社交圈里十几个活跃的微信群轮番轰炸。稍微大的微信群动辄上百人，当人数如此之多时，在群里的对话中要@人就变成很麻烦的一件事情，因为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在iPhone屏幕上的一页里只能展示9个人名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;仍然有无数很二的人不知道把自己群里的名称改为真实人名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最方便识别人名的方式其实是头像，但很多人经常性地把自己的头像变来变去&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本来可以在微信对话里@其他人是一个很方便很强大的功能，但它的局限性也越来越明显，那怎么办呢？&lt;/p&gt;
&lt;p&gt;很简单，可以这样子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在微信群里的对话中加了@，屏幕转移到微信里的人名录（9行）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;调整这个人名录的排序，使得在群里最近发言的人的名字在第一行，其次发言的人的名字在第二行，依次类推&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这么做背后的道理很明显，在大多数情况下，我们在微信群里觉得有必要@某某某，是因为某某某刚刚说过一句话，基本上就在当前屏幕里。虽然不排除你想@的某某某已经几百年没吭声了，但这种情况是少数。而且，把微信群的人名录的次序锁定本身没有任何便利 - 没有人记得几十号人的排名顺序，还不如把排序做成动态变化的数组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信显然是一个空前成功的产品，这是毫无疑问的。它的成功在我看来并不在产品的设计本身，而是在于整体产品的定位和布局。从实打实的产品设计，界面设计而言，微信的用户体验非常糟糕，从早期版本到现在，让人不明所以的地方层出不穷，比当年摩托罗拉的那个为人诟病的手机系统好不了多少（99-00年）。张小龙有过人之处，但看到世人皆对其产品设计理念顶礼膜拜，奉若神明，诚可笑也(is there anything there we haven't learned from Jobs yet?)。&lt;/p&gt;</summary><category term="中文"></category></entry><entry><title>Use Gmail to receive and send other emails</title><link href="http://guizishanren.com/receive-and-send-other-emails-through-Gmail(eng)" rel="alternate"></link><updated>2014-04-12T08:00:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2014-04-12:receive-and-send-other-emails-through-Gmail(eng)</id><summary type="html">&lt;p&gt;Checking multiple mailboxes is a pain, but you can use Gmail to manage all of them through one single interface and one single login session. I have more than 10+ mailboxes from various institutions, companies and projects. I forward all of them to my personal gmail and also set up "Send Email As ... " in my gmail account so that I can receive and send other emails without ever leaving my gmail account and I never need to bother to login to other mailboxes. &lt;/p&gt;
&lt;p&gt;Frankly, the act of login to multiple email accounts on a daily basis just doesn't make any sense to me. It's a pure waste of time and obviously extremely inefficient.&lt;/p&gt;
&lt;p&gt;This article explains how to avoid that and consolidate all your emails in your Gmail account.&lt;/p&gt;
&lt;p&gt;There are two ways to achieve this objective. One is to receive other email through POP3 protocol in Gmail; the other one is to forward other email to Gmail and then set up ""Send Mail as ... " in Gmail. &lt;em&gt;Do not use POP3&lt;/em&gt;. POP3's speed of email retrieval is much slower. It takes certain time interval for Gmail to connect to the POP3 server of the other email. Sometimes that can be as long as one hour. I have seen people writing Python scripts to try to fool Gmail server to speed up the retrieval speed as it cannot be adjusted by user. This kind of delay is unacceptable in many situations (it took me quite a while to figure this out after many frustrating moments). Then why does POP3 even exist? It has one very handy function - it can retrieve ALL the historical emails from the POP3 server from day one. Sometimes, this could be useful depending on what you need to do. &lt;/p&gt;
&lt;p&gt;Here's a walk-through of how to set up forward + send mail as in Gmail:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Set up forwarding (to be competed by yourself or system Admin of the host server)&lt;/p&gt;
&lt;p&gt;System admin (a role I have played often in my various projects) sets up "forwarder" in the control panel of the host email server (such as hostmonster.com), so that emails sent to &lt;em&gt;AAA@XXX.com&lt;/em&gt; will be forwarded to &lt;em&gt;AAA@gmail.com&lt;/em&gt; right away (with no delay). This is slightly different from the usual "forward" concept in emailing. For example, when your friend sends you an email to your AAA@XXX.com from his BBB@163.com, this email will appear directly (as a result of the above setup) in your AAA@gmail.com, showing sender as "BBB@163.com" and receiver as AAA@XXX.com. &lt;/p&gt;
&lt;p&gt;Sometimes it doesn't take a system admin to do those. For example, you are the owner of AAA@XXX.com (which could be your @gsb.stanford.edu email for example). Then you just need to go into its settings to automatically forward all the emails to your AAA@gmail.com. Usually, to do this the system will ask the owner of AAA@gmail.com (ie. you) to approve this forwarding request to prevent spamming. Just follow the system's instructions to complete the forwarding setup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up sending (to be completed by yourself)&lt;/p&gt;
&lt;p&gt;Besides receiving, you also want to be able to send email as AAA@XXX.com in your AAA@gmail.com login session/interface. You need to complete this step by yourself in Gmail.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gmail=&amp;gt;Settings=&amp;gt;Accounts=&amp;gt;Send Mail As&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click “Add another email address you own”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Name, input a name you prefer to label this&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Email Address, input "AAA@XXX.com"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mail to:Address, input "AAA@XXX.com"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tick the box for "Treat as an alias"，then click Next Step&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the next window that pops up, click "Send Confirmation Email" button. Gmail will send an email to AAA@XXX.com for confirmation. If you have already completed the first step Forwarding, then you will receive this email right away in your Gmail account. It will contain a 6~8 digit confirmation code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy and paste the confirmation code into the window, click "Confirm (Verify)"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now when you are sending emails in Gmail, in the "Send" field you will now see a list of all the email addresses you can choose from, including AAA@XXX.com. This list does not appear before, when the only "Send Mail As" option is your AAA@gmail.com. It does now.&lt;/p&gt;
&lt;p&gt;When BBB@163.com receives your reply, he will see this email comes from AAA@XXX.com, even though you receive his original email and reply to him entirely within your AAA@gmail.com account. He doesn't even know the existence of your AAA@gmail.com. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it! Let me a comment if you run into any issues. &lt;/p&gt;
&lt;p&gt;(The original Chinese version was written earlier in &lt;a href="http://guizishanren.com/posts/2014/02/receive-and-send-other-emails-through-Gmail/"&gt;this post&lt;/a&gt;)&lt;/p&gt;</summary><category term=""></category></entry><entry><title>通过Gmail收发其他邮箱的邮件</title><link href="http://guizishanren.com/receive-and-send-other-emails-through-Gmail(chn)" rel="alternate"></link><updated>2014-02-03T03:26:00-08:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2014-02-03:receive-and-send-other-emails-through-Gmail(chn)</id><summary type="html">&lt;p&gt;用Gmail来收发其他邮件有两个办法，一个是通过POP3，一个是通过Forward + Send Mail As。POP3速度比较慢，因为Gmail从POP3服务器上获取邮件有一定的时间间隔，有时长达一个小时，这种延迟在很多情况下是无法让人接受的。本文介绍的是一个用户如何通过Forward + Send Mail As（全面优越于POP3）来收发其他邮箱的邮件，有两个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;由网管完成&lt;/p&gt;
&lt;p&gt;网管在邮件服务器上设置forwarder，把发给&lt;em&gt;AAA@XXX.com&lt;/em&gt;的邮件“转发”到&lt;em&gt;AAA@gmail.com&lt;/em&gt;。这个“转发”跟通常邮件里的转发略有不同。譬如，你的邮件是AAA@XXX.com，你的朋友从BBB@163.com给你发了封邮件，这封邮件（因为网管的设置）直接出现（其实是“被拷贝”）在你的AAA@gmail.com邮箱里，发件人显示仍然是BBB@163.com，收件人仍然是AAA@XXX.com。&lt;/p&gt;
&lt;p&gt;也就是说，只要网管完成了上述设置，你什么都不需要做就可以在Gmail里看到寄给AAA@XXX.com的邮件了。当然，这位网管之所以能做到这一点，是因为他的管理权限就是@XXX.com的电子邮件系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由用户完成&lt;/p&gt;
&lt;p&gt;除了读，还需要能通过AAA@XXX.com发邮件。这个步骤需要用户自己完成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gmail=&amp;gt;Settings=&amp;gt;Accounts=&amp;gt;Send Mail As&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击“Add another email address you own”。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Name可以随便填自己喜欢的名字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Email Address里填写AAA@XXX.com&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mailto:Address里填写AAA@XXX.com&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在"Treat as an alias"前打勾，点击Next Step&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在下一个窗口，点击“发送确认邮件”。Gmail会发封邮件给AAA@XXX.com，如果步骤1已经完成，你会在Gmail里收到这封邮件，内含6-8位的一个确认代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把邮件里的确认代码剪贴到下一个窗口，点击“确认”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Gmail里发邮件时，在“发件人”一栏会看到一个菜单，里面有所有你可以“代发”的邮箱地址。选择合适的邮箱地址发送邮件即可。这样，当BBB@163.com收到你的回信时，他看到的是来自AAA@XXX.com的邮件，尽管你所有的操作都是在Gmail里完成的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好了，现在你可以完全隐藏在&lt;em&gt;AAA@gmail.com&lt;/em&gt;之后，完成&lt;em&gt;AAA@XXX.com&lt;/em&gt;的所有操作了（收发邮件）。&lt;/p&gt;</summary><category term="中文"></category></entry><entry><title>Instagram，摄影，和分享</title><link href="http://guizishanren.com/instagram-photography-and-sharing" rel="alternate"></link><updated>2012-03-17T15:35:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2012-03-17:instagram-photography-and-sharing</id><summary type="html">&lt;p&gt;最近在不停地给各路朋友介绍Instagram，讲得我口干舌燥。为提高效率，一次性在这里整理成文，便于分享和传播。感觉Instagram这个应用是一个我等待了十年的老朋友，我一直在寻找他，而他的影子一直模模糊糊，似是而非，几次抓住了衣服的边角发现其实不是的。现在，他倏然之间神一样的出现在我的面前。自苹果的应用上线以来，用过无数app，没有哪一个app（包括Draw
Something）让我如此沉溺其中不能自拔。本来我还在考虑把用了7-8年的Nikon
D-70升级一下，但在跟instagram耳鬓厮磨的过去两个月里发现，Instagram＋iPhone4s让绝对多数的单反相机（M8当然还是值得拥有的）和卡片机失去了存在的价值。&lt;/p&gt;
&lt;p&gt;身边不少朋友其实都已经在Instagram上了，但大多数属于僵尸状态－这我完全可以理解。Instagram几乎可以算是我玩过的社交网络（如果我们仅仅从狭隘的社交网络去理解Instagram的话）里最难玩的一个了，积累粉丝（follower）非常缓慢。Instagram不同于新浪微博（我对新浪微博的建议是只要是华人就应该上，否则就跟这个时代的中国彻底脱节了，if
he/she still cares。见前文：&lt;a href="http://guizishanren.com/sina-weibo-introduction/"&gt;新浪微博入门2011版&lt;/a&gt;，并非适合每个人。我只能说，它太适合我了，简直就是为我量身定做的。如果你对我的了解超越CFO这个单词的话，不妨睁大你晶莹透亮的大眼睛/中眼睛/小眼睛，来更多地了解一下instagram。&lt;/p&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;Instagram是一个iPhone上的分享照片的应用，是眼下最火爆的移动互联网应用，活跃用户有2700万－在推出Android版之前就能达到这种规模，实在是惊人的成就。Instagram的使用极其简单，从iTunes下载（是免费的），注册，拍照（或者从照片集里挑选现有的），用程序自带的滤镜加上效果，分享，然后等待其他的用户（称之为IGer）来称赞(Like)和评论(comment)。高级用户可以设置各种社交网络的分享，这样每张照片在分享到Instagram社区的同时也可以分享到Facebook,
Twitter，新浪微博（Yes!），Flickr,
Foursquare，Tumblr和Posterous。用户可以选择完全公开照片，也可以选择“隐私”模式，仅仅对自己的好友公开照片。你follow的人和follow你的人的列表都是公开的，别人也可以浏览，就跟微博/twitter一样。&lt;/p&gt;
&lt;p&gt;Instagram上除了分享照片（中间项），另一个主要行为就是订阅（follow）其他IGer的照片流（左数＃1项），跟RSS和Twitter/微博的模式一样，对每张照片只有两个操作：赞（Like）和评论（comment）。在“notice”栏里可以看到三类系统消息：别人给你的赞，评论，或者新粉丝，还可以看到你follow的IGer称赞了哪些其他人的照片。在评论里可以用@其他用户（跟微博一样），还可以用hashtag#来添加关键词。Instagram跟其他SNS一个突出的区别，就是用户无法转发图片，这个产品设计的思路简单到近乎于固执和不近人情，但却自有道理，后面会有详述。&lt;/p&gt;
&lt;p&gt;Instagram目前只有&lt;strong&gt;iPhone&lt;/strong&gt;版－所有最新潮的应用刚推出来的时候一般都只有iPhone版，但据说很快就会推出Android版了。Instagram没有一个功能性的网站，整个社区只存在于移动互联网上。习惯用网页的朋友可以从其他第三方网站上浏览Instagram的照片（当然，一个真正的IGer是不屑于这么做的－在移动互联网的时代，web的概念已经过时），譬如instagrid，或者statigr.am等。Instagram的团队把所有注意力全部放在照片的分享上，充分开放了API，把建立网站这种费时费力的下游工作任由其他开发商去完成。基于Instagram
API的手机应用和网站已经逐渐形成了一个完整的产业链，可以提供各种令人眼花缭乱的辅助性功能。&lt;/p&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;手机上的应用已经这么多，干嘛还要装Instagram呢？从微观层面，有三个因素。&lt;/p&gt;
&lt;p&gt;最主要的原因，在于它强大无匹的分享功能。上述列举的SNS分享设置囊括了眼下所有最具规模的平台级的社交网络（SNS），这是最吸引我的地方。过去十年，总是为照片在互联网上的归属地烦恼，今天是flickr，明天是picasaweb，今天这个被封了，明天那个也不稳定了，今天是facebook
photo，明天是Google+。Instagram即时把照片同步到所有这些平台上，可谓一劳永逸。新浪微博的用户可以在我的微博相册里看到所有的照片，Facebook的用户可以在Timeline/Instagram
Album里看到我所有的照片（把照片集的access定为公开），世界终于大同了。从我过去几个月的使用经历来看，Instagram跟这些平台的同步几乎完全即时，图片质量保留得非常好。此话听起来简单，要做到还真不容易，另外一个人气爆棚的应用Pinterest的iPhone客户端就始终不能做到即时，稳定的同步（关于罄竹难书的Pinterest，后面继续吐槽）。很多其他的应用无法做到跟境外被GFW封掉的网站即时同步，但Instagram的同步由服务器在后台完成，不在客户端完成，所以分享到这些被墙掉的境外网站毫无压力，不需要国内用户在手机上翻墙。&lt;/p&gt;
&lt;p&gt;说到分享，必须得提一下instagram跟&lt;strong&gt;foursquare&lt;/strong&gt;的妙不可言的同步。我是一个史诗级别的foursquare用户，在我的foursquare上几乎存有所有我认为值得保留的各个国家的餐饮娱乐场所－foursquare的商户数据库也真是够强大的，太齐全了。但从foursquare的客户端上check-in有个局限性，就是用户必须在商户的GPS地点附近，距离远了就属于off-the-grid，无法check-in。很多饭局上，只有拍照的时间，没有check-in的时间（check-in这件事，在很多人眼里还是比较2的）。这是foursquare的产品逻辑－先决定地点，再决定行为（check-in）。Instagram把这个逻辑反过来了，先决定照片（现在的智能手机拍的照片都默认包括GPS的地点信息），再根据照片内含的地点信息决定在什么地点check-in。所以，我现在通过拍摄照片=&gt;在instagram里分享照片就可以同时解决foursquare上check-in的问题，而且这个动作可以在离开了地点之后的任意时间点完成，方便多了。&lt;/p&gt;
&lt;p&gt;喜爱instagram的另外一个重要原因（但不是主要）是它的&lt;strong&gt;滤镜&lt;/strong&gt;，有大概17个滤镜可供选择，可以达到各种老式卡片机的效果。诚然，很多其他的app也可以提供各种滤镜，而且各有千秋，譬如Camera+, WeicoiPhone，Hipstamatic，Magic Hour等。对于最好的滤镜的追求是没有止境的，我觉得Instagram的滤镜组合足够好了，反正，这也并非instagram的独家特长，就算不用滤镜素颜上阵的照片也很多。&lt;/p&gt;
&lt;p&gt;另外一个微观层面深层次的因素，则是instagram的社区和群体，以及这个群体所代表的一种生活态度。Instagram的主体用户是喜爱&lt;strong&gt;摄影&lt;/strong&gt;，喜爱用自己的眼光和视角来观察和欣赏这个世界的人。开发者（创始人就是两个程序员）倾注了全部的精力来满足此类用户的需求。上面说到了，instagram里没有转发这个概念，所以，一张照片要想被传播，其实是不容易的，无法通过大家已经习惯的现有的SNS社区的惯例进行viral
promotion（A喜欢B，B喜欢C，B转发C的照片，然后被A看到了，A也开始喜欢C）。在传统twitter/weibo的社区里，一个质量普通的信息点可以因为一个偶然相遇的节点（大号V用户）的转发而获得跟自身质量不成比例的影响力，这是此类社区吸引人的地方，也是它们的局限性－因为　信息影响力/信息质量　的比例严重失衡，而且信息点被转发后定义发生变化，成为一个新的信息点，失去了跟原始节点的联系，破坏了高质量信息点内容的完整性和归属性。在Instagram的世界里，杜绝了转发的概念后，所有的信息流最后都可以追溯到最原始的照片，所有的赞誉和评论里附加的内容，都集合在原始照片这个信息点，没有任何流失。这是对摄影者最大的慰藉和尊重，当然也为照片的传播竖立起不低的门槛。所以，一张照片要达到传世的影响，只有一条最根本的道路：be
really good（下文会详述如何达到更多的用户）。&lt;/p&gt;
&lt;p&gt;从宏观层面，instagram的横空出世，顺应了摄影技术的迅猛发展，回归了业余摄影的本质。对于一个普通用户而言，摄影的意义大约无外乎两个，记录和分享。我大概从十年前开始用数码相机拍照，周游列国时积累了很多照片集。基本上每次长途旅行回来都会拍下几百张照片，一张张地剪辑，修改，选出50张左右制作成一个精选集，然后添加caption，并且在caption上花样百出，有全部用摇滚歌名的，&lt;a href="https://picasaweb.google.com/115331596416003114882/HawaiiTheBigIsland?authuser=0&amp;amp;feat=directlink"&gt;有全部用金庸诗句的&lt;/a&gt;，&lt;a href="https://picasaweb.google.com/115331596416003114882/2006?authuser=0&amp;amp;authkey=Gv1sRgCKPa3MafzLr0Mg&amp;amp;feat=directlink"&gt;有全部用故事情节的&lt;/a&gt;，只为了引起更多观众的注意（我觉得大多数都没有注意到，甚憾），然后分享到照片平台上，一开始是flickr，后来是picasaweb，再后来是facebook，有时候caption不能顺利移植还得重新写一遍。。。最后，再群发邮件发给对此可能感兴趣的海内外朋友们。这个过程太繁琐了，最起码是一整个晚上四五个小时的时间（如果有灵感的话），即使对于我这样的熟练工也难以持续下去。我还算是在分享照片这方面尽量照顾到用户体验的人了，每次分享的专辑尽量不超过50张照片，而且每张照片主题尽量不重复，宁缺毋滥。看到很多朋友分享照片就是把不加剪辑的几百张原始照片扔到一个网络地址然后把链接发给大家－难道还真指望有人看么？有朋友愿意分享其实已经是不错的了，更大多数的单反相机用户是只闻打雷不见下雨，注意力主要在装备上（亚洲男性好像都好这一口，似乎手里不摆弄个狗头就不好意思跟人打招呼），照片还真没怎么见过。&lt;/p&gt;
&lt;p&gt;不管对于深度用户还是轻度用户，传统的照片分享方式太麻烦了，那种单反相机－线下编辑－线上分享的路数在移动互联网把时间碎片化的时代已经越来越举步维艰了，以致于我们都快要失去了摄影的乐趣。我干嘛要拍照？因为我希望有人喜欢我的照片。如果别人看不到我的照片的话，这些令人头晕目眩的硬件器材指标，各种摄影技术行话，各种分享平台粉丝之间的口水大战，就都失去了意义。而Instagram就专心致志地解决了这个问题，可以让用户捕捉&lt;strong&gt;瞬间&lt;/strong&gt;的心情和灵感，以最便捷的方式把自己眼中的世界即时分享给尽可能多的用户群。&lt;/p&gt;
&lt;p&gt;分享的问题解决了，可照片的质量呢？鄙夷单反相机的IGers能拍出好的照片吗？在iPhone4s八百万像素和iOS设备Retina高清晰度显示屏的支持下，Instagram上的照片足够清晰，质量足够好。iPhone4s本身的相机智能水平已经很高了，在大多数情况下的自动调光和对焦都处理得不错。IGer可以把精力完全放在构图上，不需要担忧其他的技术细节，譬如white
balance, contrast,
lighting等。我一直不是一个技术流，我拍照以感觉为主，构图是我最在意的环节。我也许说不出来感光度和快门速度的细节，但我有自己观察这个世界的角度。曾经一度考虑过用RAW格式，但觉得太耗时间，而且说实话，现在iOS平台上图片处理软件太发达了，除了构图以外（这个也可以通过cropping来修正）的所有照片元素都可以被调整，真没必要在其他细节上花过多的时间。&lt;/p&gt;
&lt;h2&gt;How&lt;/h2&gt;
&lt;p&gt;让照片获得关注有三种途径：1.　通过你的粉丝；2.　通过&lt;strong&gt;hashtag&lt;/strong&gt;；3.　上热门榜/Popular Page。粉丝的前期积累就看个人RP了，当前Instagram上的中国人很少，大部分处于僵尸状态，即使在亚洲内比较也远不及日本和泰国的用户活跃。看那些欧美用户，动则一个十几岁乳臭未干的小家伙就是几百个粉丝，让我很不平衡。我勤勉耕耘了两个月都没有过百。。。目前最活跃的粉丝都不是我身边认识的朋友，都是以前不认识的IGers。通过hashtag，即#，来获取关注是非常必要的，对于粉丝很少的用户的照片关注度会产生质的飞跃。我一般是这样：在网上定期搜寻一下最热门的Instagram tag，把十几个对我的所有照片都适用的事先写好，放在iPhone的备忘录里，上传了照片之后马上在第一时间（动作一定要快）从备忘录里把这些tag粘贴到评论里。几乎是瞬间就会有like进来了，然后在一个小时内逐渐达到10-30条的规模，12个小时后老照片上的新增加like数量就很少了。Instagram里信息的衰变期很短，最热门的tag里的照片出现在首页的时间一般不超过一分钟，在这一分钟里会有大量的用户（几百万，甚至上千万）有可能看到你的照片，等这张照片被挤到第二页后它的潜在观众数量就下降了几个数量级。Instagram规定一张照片的tag不能超过30个。除了那一套很宽泛的标签外，我还会根据照片的主题贴上更加具体的标签，譬如#798。上热门榜是件让人纠结的事情，貌似极难。根据一些用户的反馈，如果在一分钟之内达到20多个的like，基本上肯定能上热门榜，一旦上了热门榜，潜在观众就变成了整个Instagram社区，而且会存在比较长的一段时间，一般会给照片带来几何级别的like增长，达到好几百甚至上千。&lt;/p&gt;
&lt;p&gt;有几个比较好的摄影/图片工具值得推荐，跟Instagram在一起使用威力非常强大：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Squaready，把照片变成方形框，而且底板变成白色。Instagram的底板是白色，如果选用的照片是横幅的话，会在上下两端留下黑色的margin，影响效果；另外，Instagram本身只能接受横幅照片，不能接受竖幅照片。这些调整都可以在免费的Squaready完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Camera+，很多不同的滤镜，对Instagram现有的滤镜组合是非常好的补充，有些滤镜非常独特，效果惊艳，譬如So
Emo和Overlay；界面极其方便，可以很便捷地搭配Scene和滤镜的组合，查看不同效果；有连拍和防抖功能，比iPhone自带的拍照功能强&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hipstamatic，独树一帜的怀旧相机镜头和相纸的搭配创造出非常有feel的照片，在Instagram之前是2010年The
App of the Year by
Apple（Instagram是2011年的获胜者），可以把拍的照片导出来，但不能对用非hipstamatic拍摄的照片进行编辑，略为遗憾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Snapseed，iPhone上的Photo
Shop，神器级别，要5-6美刀，但对于有追求的业余摄影爱好者来说绝对值得。界面方便，速度快捷，效果丰富而全面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Which&lt;/h2&gt;
&lt;p&gt;跟Instagram基本同期涌现出来的其他照片分享app还有以下几个，顺便也说一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Path 2，关注用户不能超过50。。。好吧，就因为这一点，足以打消我的任何兴趣。Path
2是分享整个生活的，不光是摄影，虽然它的滤镜也很齐全。我总觉得在Facebook推出了Timeline之后不知道Path
2还有什么存在的价值。它的界面展示非常有创意和视觉冲击力，但也仅此而已。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pinterest，从很多数字来看，Pinterest比Instagram还要火，用户数增长还要快，国内已经有三十多家山寨版了。可悲的是，它的iPhone客户端是我用过的最烂的客户端，没有之一。基本界面跟Instagram类似，但上传屡屡失败，屡屡发生重复上载的错误，用户界面信息从来都不能更新到实时状态。Pinterest可以转发，可以like，可以评论，照理说应该具备被Instagram更广阔的传播途径。但从我的测试结果来看，对于同样的照片，它并没展现出比Instagram更胜一筹的传播能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hipstamatic，从某种程度上Hipstamatic也是Instagram的竞争者，它也有自己的一个社区，但Instagram可以兼容Hipstamatic，而Hipstamatic不能兼容Instragram，所以，谁是主流选择也很明显。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，我的instagram ID是&lt;a href="http://instagram.com/zire"&gt;&lt;strong&gt;zire&lt;/strong&gt;&lt;/a&gt;，好歹你也看完了这么长的裹脚，应该加我了。&lt;/p&gt;</summary><category term="中文"></category></entry><entry><title>Disable Spotlight</title><link href="http://guizishanren.com/How-to-disable-Spotlight-on-Mac" rel="alternate"></link><updated>2011-07-31T13:41:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2011-07-31:How-to-disable-Spotlight-on-Mac</id><summary type="html">&lt;p&gt;在Terminal窗口，用这个指令来disable有害无益的spotlight:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;mdutil&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果要重新打开：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;mdutil&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="中文"></category></entry><entry><title>新浪微博入门2011版</title><link href="http://guizishanren.com/sina-weibo-introduction" rel="alternate"></link><updated>2011-05-29T02:43:00-07:00</updated><author><name>Herbert Yang</name></author><id>tag:guizishanren.com,2011-05-29:sina-weibo-introduction</id><summary type="html">&lt;p&gt;继Apple, Google之后，新浪很快崛起，成为下一家必须送我股票的公司 - 我给它们带来了如此多智商情商都令人发指的高端用户，它们不给我股票就实在说不过去了。作为一个超重的孤独的领跑者，和一个微胖的黝黑的小桔灯，我衷心希望每个博友都可以用正确的眼光来看待，来使用新浪微博。那些对微博嗤之以鼻的朋友，对微博的浅见主要集中在这么几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;我实在没啥好说的，干嘛用微博？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我啥也不是，没人关心我说啥，干嘛用微博？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我不愿意把个人隐私放到微博上，干嘛用微博？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我已经在用人人网和开心网了，干嘛用微博？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;玩这个太耗时间了，干嘛用微博？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;显然，这些浅见通常是在善意的错误引导下（每个人身边都有那么几个拙于言辞不善销售不善归类不善总结的淳朴的朋友）造成的。这些想法，都是末节。&lt;/p&gt;
&lt;p&gt;微博的横空出世，使得其他很多互联网平台瞬间黯然失色。它最特别，最革命性之处，在于大量中国社会里的主流精英分子们无所保留地加入了这个新颖的烘炉里，跟草根们一起互动交流。在中国历史上，这是从来没有出现过的一个现象，至少没有在如此大规模的情况下出现过。以前的各种论坛，社区，开心网，人人网，网络游戏，聚集的人群实际上在社会上只拥有很少的话语权（或者说，根本就没有话语权）。不管这些网上社区的人气看起来多么火爆，点击率多高，它们对社会的影响力是非常薄弱的。新浪微博彻底改变了这一切，发布微博的成本（所需要的时间和技术）是如此之低，就好像&lt;a href="www.hao123.com"&gt;hao123&lt;/a&gt;一样，是一个简单到几乎无法被复制被超越的产品。在虚荣心的诱惑下，掌握了巨大社会资源的35至60岁的人群踊跃地投入微博的洪流中，贪婪地吸收粉丝，饥渴地分享自己的心路历程（他们都很寂寞），好奇地窥视着他们以前不曾接触过的社会阶层和群落。而这个阶层的人群的加入，又彻底点爆了草根们的兴奋点，于是，一个打通了社会各阶层的对话机制就此诞生。这个对话机制是平等的，对称的，直接的，透明的，即时的。在这样一个平台上，似乎各种可能性都存在。我觉得，生于这个时代，适逢其会而错过这个羽量级的社会形态，是很可惜的。&lt;/p&gt;
&lt;p&gt;那么，如何参与呢？粗略归纳了一下，大概有九种方式。从A到I，参与的程度逐渐加深。每个人应该都可以找到适合自己的类型。没有找到，只是因为从来没有人可以清晰地告诉你，till now。&lt;/p&gt;
&lt;h2&gt;新浪微博上的九种存在感&lt;/h2&gt;
&lt;h3&gt;八卦党，新闻类信息的获取&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/n/%E6%B5%AE%E7%94%9F%E5%8D%81%E6%85%B5"&gt;浮生十慵&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新闻总得看吧（两耳不闻窗外事的人请绕行）？各大新闻媒体基本上都在微博上开辟了自己的新领土。大多数新闻，其实在140个字以内就可以说清楚了。现在我已经很少看以前不得不看的新浪新闻了。一开始觉得心里不踏实，如果漏掉什么重大事件怎么办？这种担心被证明是多余的。在数次社会重大事件的紧要关口，微博无一例外地证明了自己在速度，广度，和深度上已经成为中国第一大媒体。只要你关注的群体具备一定的覆盖面，总会有人转发重大新闻，你不会错过的。从这个角度，使用微博，很像使用RSS，只不过把RSS的源变成了微博ID而已。RSS也是一个不错的获取新闻的方式，但每次我看到Google
Reader里1000+的未读文章，就觉得意兴阑珊。RSS有效地把我变成了信息的奴隶，微博给我的自由度要大得多。当然，微博上的新闻，都是短期的。真正有深度的，不以时间为锚位的分析和社论，还是得看专门的杂志或者社区，譬如New Yorker，The Atlantic, Vanity Fair, Wire, Slashdot，三联，财新等。&lt;/p&gt;
&lt;h3&gt;休闲党，笑话段子热点&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/1798732744"&gt;瘸腿正在熬&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总得时不时放松一下自己吧（五道杠的同学请绕行）？酒酣耳热之余，总得知道一些笑话段子，花边新闻，星座血型，热点新词，无聊视频吧？否则你岂不是太无趣了(ops, maybe, you are.)？以前这些内容散见于各种零星的群落里，如论坛，SNS，短信等。现在，它们全在微博上。常见新上微博的社会名流欣喜地转发快要发霉变馊的笑话段子，我就捏了把汗。。。this one is , so 2010。&lt;/p&gt;
&lt;h3&gt;潜水党，关注你关心的人&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/1904027955"&gt;leu_leu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总有个ta你比较关心吧（离群索居者请绕行）？关注一下你的朋友和亲人，看看他们在干什么，想什么，你会有新发现。leu_leu就是个好同志，他为了知道我在北京如何混迹红尘，不惜悍然注册一个马甲来关注我，这种态度，是非常值得赞赏的！鼓掌！有人会说，XXX我太熟了，不需要通过微博来了解ta。嘿嘿，表想当然。你会发现，离开了家庭的拘谨，离开了学校的放浪，离开了公司的约束，你熟悉的亲人朋友同事在微博上呈现出你完全不了解的新的一面。原来平时木讷沉默的老陈是个愤青话痨，原来文静端庄的小王也在关注&lt;a href="http://weibo.com/1496913734"&gt;@不加V&lt;/a&gt; 并积极参加深夜盘口，原来纵横京城酒桌夜店豪气干云的Jason在家里是个温柔老爸还有一手好厨艺。。。微博上见真性情，看看一个人的微博就能看出这是个什么样的人。现在电影院里充斥了伪3D（就连新出炉的Pirate 4都不能幸免），真正的3D人像，其实就在微博。&lt;/p&gt;
&lt;h3&gt;冒泡党，跟你关心的人产生互动&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/yjianfeng"&gt;严剑峰&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总得时不时跟朋友聊聊天吧（除了电邮，从来没有用其他任何方式跟人类在互联网上沟通过者请绕行）？微博其实是一个非常好的聊天工具，克服了传统网络聊天工具的两大弊病：a)必须两个人同时在线；b)一般只能进行一对一的交流。这两大弊病是对社会化交流极大的限制。微博是非即时的多对多的聊天工具，唯一付出的代价是内容方面得有所限制，过于隐私的信息不便发布。有些有趣的话题，我跟朋友们可以在同一条微博下讨论数天之久（譬如，&lt;a href="http://weibo.com/1743289671/eAPkj92Fzy3"&gt;火帝的测字神贴&lt;/a&gt;，&lt;a href="http://weibo.com/1684815495/wr4mMZBAT4"&gt;兔山帝的明明体神作&lt;/a&gt;，&lt;a href="http://weibo.com/k/%25CE%25BB%25E8%25AE%25B2%25E5%25A0%2582&amp;amp;refer=miniblog_jing"&gt;瓜瓜帝的#λ讲堂#&lt;/a&gt;神课，&lt;a href="http://weibo.com/1789166525/zF4mQipBzP"&gt;大叔帝的哲学神聊&lt;/a&gt;和&lt;a href="http://weibo.com/1728741842/5KD0sU9C2s3"&gt;萌萌帝的启蒙神楼&lt;/a&gt;）。&lt;/p&gt;
&lt;h3&gt;转手党，转发自己感兴趣的东西&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/yiqin"&gt;老张的笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总有心有所感，“于我心有戚戚焉"的时候吧（心如槁木者请绕行）？没有骨鲠在喉的不必强求，转发也是一种参与微博的方式。很多人微博的主要内容就是转发，可能就加上一两句评语而已。转发是一个如此简单的动作，以致于我就不解释这么做有什么意义了。实际功能有一个：起码自己算是mark了，在自己的“微博”列表里以后可以很容易地找到这篇微博，等于是个浏览器的书签。当然，转发也是有讲究的。如果没有在原来的微博上添加什么有价值的内容或者信息，而只是纯粹转发，是不会引起太多人的兴趣的，甚至会引起粉丝们对刷屏的反感，尤其是那些本身已经被转发了上万次的微博。&lt;/p&gt;
&lt;h3&gt;清新党，分享自己的行为，心情，和想法&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/keyangstudio"&gt;唐克扬工作室&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总有自己的想法吧？有木有！？（没有者请绕行）好了，我们终于谈到微博真正最有价值的本质了，就是以最低的发布成本分享自己的想法。微博在很大程度上已经取代了传统的博客。经营博客的成本较高，真正有想法，有能力可以把博客一直坚持下去的人还是不多的。社会名人里，少数还在坚持不上微博，而是稳守博客，譬如韩寒，王小峰，徐静蕾等。很多人出于对隐私的保护，不愿在微博上说太多话，可以理解，不必强求－这是一个更加宏观的命题：事实上，只要我们用手机，用互联网，就没什么真正的隐私可言。不管是在Facebook，还是在Gtalk，还是在微博上，隐私都是无法被100%保护的。一个有意思的联想，是如何在微博的世界里产生多个彼此隔离的镜像，这样不同群体（老板vs朋友）的人看到你的微博的版本是不一样的。在魔兽世界里，这个叫instance；在《三体》里，这个叫平行历史；在新浪微博，这个叫群。要做得好很不容易，也许是微博下一阶段的潜在发展方向之一。&lt;/p&gt;
&lt;h3&gt;私奔党，寻找，发现跟自己兴趣相投的人&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/wanggqvc007"&gt;王功权&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从A到F，我觉得每个人都可以对号入座。从G开始，需求就比较独特了，未必适合所有的人。微博用户基数庞大，藏龙卧虎，可以结识到不少有趣的新朋友。这些趣味相投的朋友，甚至愿意跟你一起去私奔呢（如果你还不知道这个典故，请注册一个新浪微博ID，然后从本文中的A开始依样画葫芦）！微博上互相加好友是不需要对方同意的，这是跟熟人网络开心网或者人人网一个最本质的区别，有极深远的影响。这种模式，特别适合社交网络里弱关系的培养。人际关系有两种，强关系和弱关系。强关系是那种“四大铁”类型，几年没联系了，电话可以抄起来随便聊不需说hi的那种。这样知心知底，肝胆相照的朋友数量不会很多，一个人一辈子有5-6个就相当不错了。绝对多数所谓的“朋友”，其实都是弱关系。弱关系的朋友，你只知道ta的某个特定方面（譬如工作环境下，打球时，喝酒时，聚会时等等）。在微博时代以前，要把弱关系进一步推进需要的成本是比较高昂的，尤其在北京上海这种每个人的机会成本都很高，社交选择都很多的大城市。怎么推进？一起吃个饭？一起打场球？这个成本已经很高了，每个人心里都有一把秤。有了微博，破冰成本降到了不能再低的程度，通过几条评论，几个转发，几条私信，很快沟通就建立起来了，而且可以迅速了解对方是什么样的个性特点兴趣爱好。以前在朋友party上认识了新朋友，都是交换电话号码，现在，只要交换微博ID就可以了。微博上都已经互相关注了，电话号码是水到渠成的事情。真正的强关系朋友，是一种可遇不可求的缘分；在日常交往的层面，弱关系朋友群才是真正的金矿，而微博提供了一个极有效的交往平台。&lt;/p&gt;
&lt;h3&gt;自恋党，建立自己的官方个人媒体发布中心&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/1878923963"&gt;当当网李国庆&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;微博是扁平化的个人媒体，每个人都可以拥有自己的电台，任意向上亿用户播放自己的一切。对于自恋情节严重的人，微博简直就是天赐神器，当当网总裁李国庆即为明证（花僧&lt;a href="http://weibo.com/shidaoxin"&gt;释道心&lt;/a&gt;是另外一个）。自恋的你，如果还恰好是个名人，那太妙了，新浪巴不得你把自己的伤春悲秋，心路历程，人生感悟，包括游艇夕照，果岭挥杆英姿，每天内裤的颜色，&lt;a href="http://weibo.com/jakejones"&gt;作业本&lt;/a&gt;昨晚的嬉笑怒骂，前门二十三号晚宴芳邻的玉背，全部放在微博上，皆大欢喜。&lt;/p&gt;
&lt;h3&gt;鸡汤党，普度众生&lt;/h3&gt;
&lt;p&gt;代表人物：&lt;a href="http://weibo.com/kaifulee"&gt;李开复&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说到微博，不得不谈到兢兢业业的李导师。连书都写出来了，这是一种神马专业精神！对社会名流来说，上微博太刺激了，瞬间粉丝十几万，丹唇未启评先闻，无数粉丝对一个成功人士无条件地顶礼膜拜（中国人几千年始终如一最好的一口，就是崇拜名人）。这种感觉，尤胜鸦片。作为一个社会公认的成功人士，怎么能不给那么多敬仰ta的粉丝们灌点鸡汤呢？最起码也得转一下上午汪涵和蔡康永的微博吧？最好再818只有顶级亚洲人士才知道的美国名人的八卦。对于鸡汤党人的描述，参见&lt;a href="http://weibo.com/1270520763/wr4mYy1VnM"&gt;拙博&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;每个人可能都是几种类型的混合体，找到合适的风格就可以了，顺其自然。&lt;/p&gt;
&lt;h2&gt;初入微博常见问题浅谈&lt;/h2&gt;
&lt;h3&gt;我应该关注谁？&lt;/h3&gt;
&lt;p&gt;你在新浪微博上看到的信息，就是你所有关注的ID发布的微博的集合（按照发布时间顺序）。你关注的ID，直接影响到你看到什么样的内容。每人情况不同，可以逐渐增加，随时调整，慢慢地把这个portfolio调整成适应自己口味的最佳组合。从数量上来说，不宜太多。一般是几十到上百。我关注了三百多人，觉得经常漏掉一些朋友的更新。虽然可以把朋友分成不同的组，按照组别来看微博，但总量太多了还是不方便。经常刷屏的ID最好去掉。一般一个人每天就看几次微博，每次可能翻一两页，频频刷屏的人占用了太多带宽，要坚决地请出革命队伍。我关注的人里面大多数都是我现实生活中认识的朋友，有少数我感兴趣的名人。我刚开始用微博的时候，关注了很多社会名流和所谓的高端人士，后来发现这些人要么不是自己在发微博（背后有团队），要么水平偏低，境界不高，见识有限，就把他们一个个地去掉了。好在，这个去伪存真，大浪淘沙的过程，本身也是微博带给我们的一个有趣的经历。有人可能希望通过关注名人，评论名人，获得跟名人对话的机会。我自己这方面没太多经验（黄耀明和左小就是不关注我，唉），不好说什么。机会应该是存在的，我看到过很多大佬们信手一挥，回复小P民的例子，但也别报太大期望。很多名人只关注加V的ID，只回复V用户的评论。&lt;/p&gt;
&lt;p&gt;微博上看到的信息，是由Poisson Distribution（泊松分布）来决定的，而每个人发博的时间和频率都不一样。所以，关注的数量过百后，你几乎无法确保你可以100%看到所有关注ID的所有微博。这没关系，不是所有的微博都需要看的，该知道的，你迟早会知道。微博这个生态环境的自我调整，自我适应能力还是比较强的。&lt;/p&gt;
&lt;h3&gt;我该写什么呢？&lt;/h3&gt;
&lt;p&gt;原则：博随心生，想说啥就说啥，以一颗平常心来看待微博，别被那些微博的攻略秘笈迷花了眼睛，费尽心思地故作惊人之语。作为一名草根（粉丝过万的名人请绕行），表指望你的微博会一下子大火起来，被很多人关注或者评论。微博内容的衰变速度很快，主要生命周期在24小时以内，三天以后的内容很少会有人再去关注。所以，如果你是一个刚开始的用户，还没有太多粉丝的话，如果没有人转发你的微博，可能它很快就被湮没在浩瀚的信息海洋中了，这很正常，不必太放在心上。微博比博客优越的地方在于，用户基数大，理论上任何用户都由可能阴差阳错地看到你的博客，说不定对你的内容很感兴趣，随手留言甚至加关注。不像博客，被困在互联网一个狭小的角落里，大多数人是不会路过的，很多写得很好的博客的浏览量和订阅量都很低。&lt;/p&gt;
&lt;p&gt;微博的一个特点是它的随意性，要充分发挥这个特性，兴之所至，随手写写，别太端着，别想太多。在我的个人网站上，我的心态中有一半是为自己而写的，没有人看也没关系的。需要对自己有个交代，对伐？&lt;/p&gt;
&lt;p&gt;原创的价值是最大的。原创&gt;转发＋评论&gt;纯转发。新浪微博的逻辑设置，导致原创作者会获得最大的转发收益（未必能获得最大的评论收益。评论有可能被其他人hijack）。&lt;/p&gt;
&lt;p&gt;写微博要注意版权，如果是引用别人的言语，要加注或者用//区分开，别搞得像你自己说的话一样。&lt;/p&gt;
&lt;p&gt;插入网页链接的时候，最好顺手添加几句说明。大家都很忙，没人会在没有看到描述的情况下去点击一个链接的。&lt;/p&gt;
&lt;p&gt;如果实在写不出来。。。嗯，我没这种经历，不知道该说什么。&lt;/p&gt;
&lt;h3&gt;如何获得评论？&lt;/h3&gt;
&lt;p&gt;原则归原则，实际中，不管拥有多么平常的心态，既然混微博了，就还是希望自己的微博有回应。如果你有一群生活中的好友，如果你勃如其人，sorry，I mean，博如其人，那么这些关注你的好友会给你回应的，表着急。如果你的微博内容有趣，品质优良，总会有人冒出来给你评论的。多用@（ta的微博界面就会出现那魂牵梦绕的小黄条！），把相关的朋友拉入到你的微博中来。注意，在评论里如果用@对方是看不到小黄条的，这可以算是新浪微博的一个臭名昭著的bug。在评论里只有回复他人的评论时，对方才会看到提示的小黄条。假设微博是A写的，一条评论是B发的，你也想评论A的微博，而且你的评论跟B的评论有关，那么你应该在此条微博的评论界面中回复B，这样A和B会同时看到让人鸡动的小黄条！如果你直接评论A的话，B就看不到你的评论了。这是微博不如传统论坛（可以置顶）和以RSS为基础的博客（可以订阅评论）的地方。&lt;/p&gt;
&lt;p&gt;即使不走内容为王的路线，你也大可以做一个&lt;a href="http://weibo.com/messageinabottle"&gt;匪来匪去&lt;/a&gt;的快乐的评论党（或者，冒泡党）。一分耕耘，一分收获。你给别人多少评论，别人也一般会给你多少评论，if not more。在百无聊赖的深夜，如何让电脑右上角神奇的角落里出现那寄托着一份相思，一份挂念，一份嫉恨的小黄条？给人评论呗。。。duh。&lt;/p&gt;
&lt;h3&gt;被转发和被@有意义吗？&lt;/h3&gt;
&lt;p&gt;对于微博名人来说（粉丝过万者），被转发是其社会影响力的标志。对于草根而言，如果被转发和被@没有导致评论或者新粉丝，我觉得意义有限。一开始觉得感觉不错，后来发现也就那么回事。每个人创造的微博世界，以微博组成第一层面，以微博下的评论和被转发数组成第二层面，以积累的粉丝作为一个其半径日益增长的贯穿两个层面的支柱。被转发的数量在这个universe里，被@并不在这个universe里，因为其他人看不见你被@了。&lt;/p&gt;
&lt;h3&gt;如何增加粉丝？&lt;/h3&gt;
&lt;p&gt;Alright, now we're talking，这大概是很多人最关心的了。不管合理与否，粉丝数量是新浪微博的核心基础，是衡量一个微博规模的重要标志（甚至，唯一标志）。最靠谱的粉丝就是自己在现实中本来就认识的朋友，再加上一些朋友的朋友（在微博上进一步相识）。只有这些朋友才会耐心地看你的微博，持续地给你评论和转发。微博上有三种人，名人，敏感职业非名人，非敏感职业非名人。对于名人（可以百度出来名字的，有自己的百度知道词条）来说，粉丝几乎是自动贴上来的，根本不用发愁。非名人里，敏感职业的人也可以很快获取大量粉丝，譬如投资，娱乐，记者，模特，大公司高管等。当然，你需要把自己的职业亮出来，让大家知道。最艰难的是非敏感职业非名人的博友，要积累粉丝的确不易，大多数人在两位数和三位数之间。我认为，决定粉丝数量最核心的因素还是一个人的社会知名度和给自己贴的标签。微博质量和写作习惯有帮助，但起不到跨数量级的提升作用（作业本作为一个例外，神人也），只是锦上添花而已。几点可以注意的地方：&lt;/p&gt;
&lt;p&gt;让微博保持一定的活跃度。别人来判断要不要加你为粉丝，大多会在你的微博界面扫一眼，如果发现微博很稀疏，大概是不会关注的。非活跃用户对陌生人的价值是有限。&lt;/p&gt;
&lt;p&gt;多去别人的后院里种点评论，或许大家谈得来，就互粉了。转发别人微博时同时留下评论，是一个好的礼节（除非是故意不留名转发），也可以获得对方好感。&lt;/p&gt;
&lt;p&gt;最直接的，先关注对方，对方虽然不知道你是何方神圣，但投桃报李，心里一不淡定，可能会回粉你。据某些达人的估计，成功率大约为50%，即，加两个关注可以获得自己的一个新粉丝。别去加那些关注那些粉丝十几万的名人，他们不会一个个地查看新粉丝的。&lt;/p&gt;
&lt;p&gt;另外，图片，歌曲和视频都有利于增加微博的吸引力。&lt;/p&gt;
&lt;p&gt;说到底，粉丝这个东西，有则好，没有也不是什么大不了的。成千上万的僵尸粉丝，不如十来个真心相伴，争相刷屏的朋友。一个有效的互联网社交网络，也许70%包括了你线下生活中的朋友，再加上30%线上认识的新朋友。要想把30%的线上数量扩大上千倍，甚至上万倍，除了跻身社会名流外没有其他办法。&lt;/p&gt;
&lt;p&gt;新浪微博并非完美，它还有很多不足之处，还有很多可以改进的空间。但不管怎样，它的出现是颠覆性的，不妨参与进来，方式很多，总会有适合你的模式。以平常心对待微博，别有太强的功利心，这是一个集中了新鲜热辣新闻的媒体渠道和巩固社会关系的交往平台，connect and enjoy. It's fun.&lt;/p&gt;</summary><category term="中文"></category></entry></feed>